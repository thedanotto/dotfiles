unbind C-b
set -g prefix M-s
bind-key -r M-s send-prefix

unbind '"' # unbind horizontal split
unbind %   # unbind vertical split

# Keep plenty of history for scrollback
set -g history-limit 10000

# Set escape time to 0 for vim
set -s escape-time 0

# reload tmux conf
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# use CTRLP with alt-p
bind-key -n M-p if-shell "$is_vim" "send-keys C-p"


# bind windows
bind-key - split-window -v -c '#{pane_current_path}'
bind-key \ split-window -h -c '#{pane_current_path}'

#bind-key a split-window -h -c #{pane_current_path}/app/assets/ "vim +FZF"

bind M-j split-window -v "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"

# Prompted join-pane
bind-key j command-prompt -p "join pane from: "  "join-pane -h -s '%%'"

# Easily swap a pane (targeted by pane number) with the current pane
bind-key s display-panes\; command-prompt -p "pane #: "  "swap-pane -t '%%'"

bind-key K run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n M-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n M-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n M-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n M-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n M-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Vim Page Up and Down tailored to alt key
bind -n M-d if-shell "$is_vim" "send-keys C-d"
bind -n M-u if-shell "$is_vim" "send-keys C-u"

bind-key -n M-f send-keys logout enter


# Fine adjustment (1 or 2 cursor cells per bump)
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1

# Coarse adjustment (5 or 10 cursor cells per bump)
bind -n C-h resize-pane -L 10
bind -n C-l resize-pane -R 10
bind -n C-j resize-pane -D 5
bind -n C-k resize-pane -U 5

bind c new-window -c '#{pane_current_path}'

set-option -g base-index 1
set-option -g renumber-windows on

bind-key b break-pane -d



# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"


bind-key h split-window -h "htop"



set-option -g default-terminal "screen-256color"
set-option -g status-keys "emacs"

set-option -g status-bg '#000000'
set-option -g status-fg '#aaaaaa'

set-option -g status-left-length 50
set-option -g status-right "#P #(battery -t) #(is-online) #(date '+%a, %b %d - %I:%M') "



